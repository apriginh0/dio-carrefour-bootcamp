ESTUDAR MAIS TARDE
Instância x Estático: atributos e métodos
Estado de um Objeto
Identidade de um Objeto
Representação numérica de um objeto
Representação padrão de um objeto

AS RELAÇÕES: HERANÇA, ASSOCIAÇÃO E INTERFACE

Herança: É o relacionamento entre classes em que uma classe chamada de subclasse(classe filha,
classe derivada) é uma extensão, um subtipo, de outra classe chamada de superclasse(classe pai,
classe mãe, classe base). Devido a isto, a subclasse consegue reaproveitar os atributos e métodos
dela. Além dos que venham a ser herdados, a subclasse pode definir seus próprios membros.
Criação: class A extends B {...}
Tipos: {
Simples = A classe filha tem só uma classe mãe;
Múltipla = A classe filha tem uma ou mais classes mãe; // Java não usa }
Upcast e Downcast
Polimorfismo: A mesma ação(método), se comportando diferente
Sobrescrita: A mesma ação, podendo se comportar diferente

Associação: Possibilita um relacionamento entre classes/objetos, no qual estes possam pedir ajuda
a outras classes/objetos e representar de forma completa o conceito ao qual se destinam. Neste tipo
de relacionamento, as classes e os objetos interagem entre si para atingir seus objetivos
Tipos:
Estrutural:
Composição(Com Parte Todo) - class Pessoa { Endereco endereco; }
Agregação(Sem Parte Todo) - class Disciplina { Aluno aluno; }
Comportamental: Dependência(Depende de) - class Compra { finalizar(Cupom cupom, ...){ ... } }

Interface: Define um contrato que deve ser seguido pela classe que a implementa. Quando uma
classe implementa uma interface, ela se compromete a realizar todos os comportamentos que a
interface disponibiliza
interface A { ... }
class B implements A { ... }

ESTUDAR MAIS TARDE

Tipos de classe: Abstrata e Concreta
Métodos abstratos
Características das Associações
Palavras coringas: super, base e super()
Relações entre classes e interface: extends e implements